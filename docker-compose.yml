version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 127.0.0.1:3000:3000    # localhost only by default
    links:
      - mongo1:mongo1
      - mongo2:mongo2
      - mongo3:mongo3
      - elasticsearch:elasticsearch
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - elasticsearch
    environment:
      - MONGO_URI=mongodb://mongo1,mongo2,mongo3/growi?replicaSet=rs0&readPreference=secondary
      - ELASTICSEARCH_URI=http://elasticsearch:9200/growi
      - PASSWORD_SEED=changeme
      # - FILE_UPLOAD=mongodb   # activate this line if you use MongoDB GridFS rather than AWS
      # - FILE_UPLOAD=local     # activate this line if you use local storage of server rather than AWS
      # - MATHJAX=1             # activate this line if you want to use MathJax
      # - PLANTUML_URI=http://  # activate this line and specify if you use your own PlantUML server rather than public plantuml.com
      # - HACKMD_URI=http://    # activate this line and specify HackMD server URI which can be accessed from GROWI client browsers
      # - HACKMD_URI_FOR_SERVER=http://hackmd:3000  # activate this line and specify HackMD server URI which can be accessed from this server container
      # - FORCE_WIKI_MODE='public'    # activate this line to force wiki public mode
      # - FORCE_WIKI_MODE='private'   # activate this line to force wiki private mode

    command: "dockerize
              -wait tcp://mongo1:27017
              -wait tcp://mongo2:27017
              -wait tcp://mongo3:27017
              -wait tcp://elasticsearch:9200
              -timeout 60s
              npm run server:prod"
    restart: unless-stopped
    volumes:
      - growi_data:/data

  # Aafter mongo1 started,
  # run "docker-compose exec mongo1 mongo /init.js"
  mongo1:
    image: mongo:4.4
    restart: unless-stopped
    command: mongod --replSet rs0
    volumes:
      - mongo1_configdb:/data/configdb
      - mongo1_db:/data/db
      - ./init.js:/init.js:ro

  mongo2:
    image: mongo:4.4
    restart: unless-stopped
    command: mongod --replSet rs0
    volumes:
      - mongo2_configdb:/data/configdb
      - mongo2_db:/data/db

  mongo3:
    image: mongo:4.4
    restart: unless-stopped
    command: mongod --replSet rs0
    volumes:
      - mongo3_configdb:/data/configdb
      - mongo3_db:/data/db

  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: ./Dockerfile
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  # increase amount if you have enough memory
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

volumes:
  growi_data:
  mongo1_configdb:
  mongo1_db:
  mongo2_configdb:
  mongo2_db:
  mongo3_configdb:
  mongo3_db:
  es_data:
